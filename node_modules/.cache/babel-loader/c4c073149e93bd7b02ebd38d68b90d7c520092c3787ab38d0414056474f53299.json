{"ast":null,"code":"/*import React from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Home from './Home.js';\r\nimport PaySaggam from './paysaggam.js';\r\nimport EditForm from './editform.js'; \r\nimport Checkout from './Checkout.js';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Routes>\r\n    <Route path=\"/\" element={<Home />} />\r\n    <Route path=\"/create-post\" element={<EditForm />} />\r\n    <Route path=\"/PaySaggam\" element={<PaySaggam />} />\r\n\r\n    <Route path=\"/Checkout\" element={<Checkout />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default App;*/\n\n/*\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { load } from \"@cashfreepayments/cashfree-js\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [paymentSessionId, setPaymentSessionId] = useState(null);\r\n\r\n    const initializeSDK = async () => {\r\n        const cashfree = await load({\r\n            mode: \"production\", // Use \"sandbox\" for sandbox environment\r\n        });\r\n        return cashfree;\r\n    };\r\n\r\n    const createOrder = async () => {\r\n        try {\r\n            console.log(\"Creating order...\");\r\n            const response = await axios.post('/create-order'); // Call your server endpoint\r\n            console.log(\"Response from server:\", response.data);\r\n            const { paymentSessionId } = response.data;\r\n            console.log(\"Order created, session ID:\", paymentSessionId);\r\n            setPaymentSessionId(paymentSessionId);\r\n            return paymentSessionId;\r\n        } catch (error) {\r\n            console.error('Error creating order:', error.response ? error.response.data.message : error.message);\r\n        }\r\n    };\r\n\r\n    const doPayment = async () => {\r\n        const sessionId = await createOrder();\r\n        if (!sessionId) {\r\n            console.error('Payment session ID not set');\r\n            return;\r\n        }\r\n\r\n        const cashfree = await initializeSDK();\r\n        const checkoutOptions = {\r\n            paymentSessionId: sessionId,\r\n            redirectTarget: \"_self\",\r\n        };\r\n        cashfree.checkout(checkoutOptions);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p>Clickeate an order and open the checkout page in the current tab</p>\r\n                <button type=\"submit\" className=\"btn btn-primary\" id=\"renderBtn\" onClick={doPayment}>\r\n                    Pay Now\r\n                </button>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/kotha/OneDrive/Desktop/3/vbn/src/App.js"],"sourcesContent":["/*import React from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Home from './Home.js';\r\nimport PaySaggam from './paysaggam.js';\r\nimport EditForm from './editform.js'; \r\nimport Checkout from './Checkout.js';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Routes>\r\n    <Route path=\"/\" element={<Home />} />\r\n    <Route path=\"/create-post\" element={<EditForm />} />\r\n    <Route path=\"/PaySaggam\" element={<PaySaggam />} />\r\n\r\n    <Route path=\"/Checkout\" element={<Checkout />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default App;*/\r\n\r\n/*\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { load } from \"@cashfreepayments/cashfree-js\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [paymentSessionId, setPaymentSessionId] = useState(null);\r\n\r\n    const initializeSDK = async () => {\r\n        const cashfree = await load({\r\n            mode: \"production\", // Use \"sandbox\" for sandbox environment\r\n        });\r\n        return cashfree;\r\n    };\r\n\r\n    const createOrder = async () => {\r\n        try {\r\n            console.log(\"Creating order...\");\r\n            const response = await axios.post('/create-order'); // Call your server endpoint\r\n            console.log(\"Response from server:\", response.data);\r\n            const { paymentSessionId } = response.data;\r\n            console.log(\"Order created, session ID:\", paymentSessionId);\r\n            setPaymentSessionId(paymentSessionId);\r\n            return paymentSessionId;\r\n        } catch (error) {\r\n            console.error('Error creating order:', error.response ? error.response.data.message : error.message);\r\n        }\r\n    };\r\n\r\n    const doPayment = async () => {\r\n        const sessionId = await createOrder();\r\n        if (!sessionId) {\r\n            console.error('Payment session ID not set');\r\n            return;\r\n        }\r\n\r\n        const cashfree = await initializeSDK();\r\n        const checkoutOptions = {\r\n            paymentSessionId: sessionId,\r\n            redirectTarget: \"_self\",\r\n        };\r\n        cashfree.checkout(checkoutOptions);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p>Clickeate an order and open the checkout page in the current tab</p>\r\n                <button type=\"submit\" className=\"btn btn-primary\" id=\"renderBtn\" onClick={doPayment}>\r\n                    Pay Now\r\n                </button>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n*/\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}