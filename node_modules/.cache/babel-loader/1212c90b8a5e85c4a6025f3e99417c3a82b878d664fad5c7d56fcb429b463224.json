{"ast":null,"code":"import * as util from 'util';\nimport { defineIntegration, convertIntegrationFnToClass, getClient, addBreadcrumb } from '@sentry/core';\nimport { addConsoleInstrumentationHandler, severityLevelFromString } from '@sentry/utils';\nconst INTEGRATION_NAME = 'Console';\nconst _consoleIntegration = () => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {},\n    // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      addConsoleInstrumentationHandler(({\n        args,\n        level\n      }) => {\n        if (getClient() !== client) {\n          return;\n        }\n        addBreadcrumb({\n          category: 'console',\n          level: severityLevelFromString(level),\n          message: util.format.apply(undefined, args)\n        }, {\n          input: [...args],\n          level\n        });\n      });\n    }\n  };\n};\nconst consoleIntegration = defineIntegration(_consoleIntegration);\n\n/**\n * Console module integration.\n * @deprecated Use `consoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Console = convertIntegrationFnToClass(INTEGRATION_NAME, consoleIntegration);\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { Console, consoleIntegration };","map":{"version":3,"names":["INTEGRATION_NAME","_consoleIntegration","name","setupOnce","setup","client","addConsoleInstrumentationHandler","args","level","getClient","addBreadcrumb","category","severityLevelFromString","message","util","format","apply","undefined","input","consoleIntegration","defineIntegration","Console","convertIntegrationFnToClass"],"sources":["C:\\Users\\kotha\\OneDrive\\Desktop\\3\\vbn\\node_modules\\@sentry\\src\\integrations\\console.ts"],"sourcesContent":["import * as util from 'util';\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type { Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { addConsoleInstrumentationHandler, severityLevelFromString } from '@sentry/utils';\n\nconst INTEGRATION_NAME = 'Console';\n\nconst _consoleIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        addBreadcrumb(\n          {\n            category: 'console',\n            level: severityLevelFromString(level),\n            message: util.format.apply(undefined, args),\n          },\n          {\n            input: [...args],\n            level,\n          },\n        );\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const consoleIntegration = defineIntegration(_consoleIntegration);\n\n/**\n * Console module integration.\n * @deprecated Use `consoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Console = convertIntegrationFnToClass(INTEGRATION_NAME, consoleIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type Console = typeof Console;\n"],"mappings":";;;AAKA,MAAMA,gBAAA,GAAmB,SAAS;AAElC,MAAMC,mBAAoB,GAAGA,CAAA,KAAM;EACjC,OAAO;IACLC,IAAI,EAAEF,gBAAgB;IAC1B;IACIG,SAASA,CAAA,EAAG,EAAE;IAAA;IACdC,KAAKA,CAACC,MAAM,EAAE;MACZC,gCAAgC,CAAC,CAAC;QAAEC,IAAI;QAAEC;MAAA,CAAO,KAAK;QACpD,IAAIC,SAAS,EAAG,KAAIJ,MAAM,EAAE;UAC1B;QACV;QAEQK,aAAa,CACX;UACEC,QAAQ,EAAE,SAAS;UACnBH,KAAK,EAAEI,uBAAuB,CAACJ,KAAK,CAAC;UACrCK,OAAO,EAAEC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,SAAS,EAAEV,IAAI;QACtD,CAAW,EACD;UACEW,KAAK,EAAE,CAAC,GAAGX,IAAI,CAAC;UAChBC;QACZ,CACA,CAAS;MACT,CAAO,CAAC;IACR;EACA,CAAG;AACH,CAAG;MAEUW,kBAAmB,GAAEC,iBAAiB,CAACnB,mBAAmB;;AAEvE;AACA;AACA;AACA;AACA;AACO,MAAMoB,OAAA,GAAUC,2BAA2B,CAACtB,gBAAgB,EAAEmB,kBAAkB,CAAE;;AAIzF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}