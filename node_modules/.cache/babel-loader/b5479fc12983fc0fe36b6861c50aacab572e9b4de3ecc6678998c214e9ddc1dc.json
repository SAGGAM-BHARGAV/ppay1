{"ast":null,"code":"import { getClient } from '@sentry/core';\nimport { consoleSandbox, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../debug-build.js';\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\n/**\n * @hidden\n */\nfunction logAndExitProcess(error) {\n  consoleSandbox(() => {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  });\n  const client = getClient();\n  if (client === undefined) {\n    DEBUG_BUILD && logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n  }\n  const options = client.getOptions();\n  const timeout = options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout || DEFAULT_SHUTDOWN_TIMEOUT;\n  client.close(timeout).then(result => {\n    if (!result) {\n      DEBUG_BUILD && logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n    }\n    global.process.exit(1);\n  }, error => {\n    DEBUG_BUILD && logger.error(error);\n  });\n}\nexport { logAndExitProcess };","map":{"version":3,"names":["DEFAULT_SHUTDOWN_TIMEOUT","logAndExitProcess","error","consoleSandbox","console","client","getClient","undefined","DEBUG_BUILD","logger","warn","global","process","exit","options","getOptions","timeout","shutdownTimeout","close","then","result"],"sources":["C:\\Users\\kotha\\OneDrive\\Desktop\\3\\vbn\\node_modules\\@sentry\\src\\integrations\\utils\\errorhandling.ts"],"sourcesContent":["import { getClient } from '@sentry/core';\nimport { consoleSandbox, logger } from '@sentry/utils';\n\nimport type { NodeClient } from '../../client';\nimport { DEBUG_BUILD } from '../../debug-build';\n\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\n/**\n * @hidden\n */\nexport function logAndExitProcess(error: Error): void {\n  consoleSandbox(() => {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  });\n\n  const client = getClient<NodeClient>();\n\n  if (client === undefined) {\n    DEBUG_BUILD && logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n  }\n\n  const options = client.getOptions();\n  const timeout =\n    (options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout) ||\n    DEFAULT_SHUTDOWN_TIMEOUT;\n  client.close(timeout).then(\n    (result: boolean) => {\n      if (!result) {\n        DEBUG_BUILD && logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n      }\n      global.process.exit(1);\n    },\n    error => {\n      DEBUG_BUILD && logger.error(error);\n    },\n  );\n}\n"],"mappings":";;;AAMA,MAAMA,wBAAA,GAA2B,IAAI;;AAErC;AACA;AACA;AACO,SAASC,iBAAiBA,CAACC,KAAK,EAAe;EACpDC,cAAc,CAAC,MAAM;IACvB;IACIC,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;EACxB,CAAG,CAAC;EAEF,MAAMG,MAAA,GAASC,SAAS,EAAc;EAEtC,IAAID,MAAO,KAAIE,SAAS,EAAE;IACxBC,WAAA,IAAeC,MAAM,CAACC,IAAI,CAAC,4DAA4D,CAAC;IACxFC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EAC1B;EAEE,MAAMC,OAAQ,GAAET,MAAM,CAACU,UAAU,EAAE;EACnC,MAAMC,OAAQ,GACXF,OAAQ,IAAGA,OAAO,CAACG,eAAA,IAAmBH,OAAO,CAACG,eAAA,GAAkB,CAAE,IAAGH,OAAO,CAACG,eAAe,IAC7FjB,wBAAwB;EAC1BK,MAAM,CAACa,KAAK,CAACF,OAAO,CAAC,CAACG,IAAI,CACvBC,MAAM,IAAc;IACnB,IAAI,CAACA,MAAM,EAAE;MACXZ,WAAA,IAAeC,MAAM,CAACC,IAAI,CAAC,4EAA4E,CAAC;IAChH;IACMC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAK,EACDX,KAAA,IAAS;IACPM,WAAA,IAAeC,MAAM,CAACP,KAAK,CAACA,KAAK,CAAC;EACxC,CACA,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}